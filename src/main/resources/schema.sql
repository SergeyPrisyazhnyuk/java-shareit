DROP TABLE IF EXISTS comments, bookings, items, requests, users;

CREATE TABLE IF NOT EXISTS USERS (
	id	bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	name varchar(100) NOT NULL,
	email varchar(100) NOT NULL,
	CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS REQUESTS (
	id	bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	description varchar(255) NOT NULL,
	requestor_id bigint,
	created timestamp,
	FOREIGN KEY (requestor_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS ITEMS (
	id	bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(100) NOT NULL,
	description varchar(255) NOT NULL,
	available boolean,
	owner_id bigint NOT NULL,
	request_id bigint,
	CONSTRAINT fk_item_owner_id FOREIGN KEY (owner_id) REFERENCES users (id),
	FOREIGN KEY (request_id) REFERENCES requests (id)
);

CREATE TABLE IF NOT EXISTS bookings (
		id	bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		start_date timestamp NOT NULL,
		end_date timestamp NOT NULL ,
		item_id bigint NOT NULL ,
		booker_id bigint NOT NULL,
		status varchar(50),
		CONSTRAINT fk_booking_item_id FOREIGN KEY (item_id) REFERENCES items (id),
		CONSTRAINT fk_booking_booker_id FOREIGN KEY (booker_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS comments (
		id	bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		text varchar(512),
		item_id bigint NOT NULL ,
		author_id bigint NOT NULL,
		created timestamp,
		CONSTRAINT fk_comments_item_id FOREIGN KEY (item_id) REFERENCES items (id),
		CONSTRAINT fk_comments_author_id FOREIGN KEY (author_id) REFERENCES users (id)
);